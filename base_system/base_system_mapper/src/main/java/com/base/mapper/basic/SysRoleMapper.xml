<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.base.mapper.basic.ISysRoleMapper">
    <!-- 	<cache type="org.mybatis.caches.ehcache.EhcacheCache">
            <property name="timeToIdleSeconds" value="600"/>
            <property name="timeToLiveSeconds" value="3600"/>
            <property name="maxEntriesLocalHeap" value="1000"/>
            <property name="maxEntriesLocalDisk" value="100000"/>
            <property name="memoryStoreEvictionPolicy" value="LRU"/>
        </cache>
     -->
    <resultMap id="RM_SysRole" type="com.base.mapper.model.SysRole">
        <result property="id" column="ID"/>
        <result property="cname" column="C_NAME"/>
        <result property="cdes" column="C_DES"/>
        <result property="dcreateTime" column="D_CREATE_TIME"/>
        <result property="ioperator" column="I_OPERATOR"/>
        <result property="dupdateTime" column="D_UPDATE_TIME"/>
        <result property="iupdater" column="I_UPDATER"/>
        <result property="cstatus" column="C_STATUS"/>
        <result property="ccode" column="C_CODE"/>
    </resultMap>

    <resultMap id="RM_SysRoleVO" type="com.base.pojo.basic.SysRoleVO" extends="RM_SysRole">

    </resultMap>

    <sql id="columns">
	    <![CDATA[

		ID,C_NAME,C_DES,D_CREATE_TIME,I_OPERATOR,D_UPDATE_TIME,I_UPDATER,C_STATUS,C_CODE

        ]]>
	</sql>

    <sql id="where">
        <where>
            <if test="paramBean != null and @Ognl@isNotEmpty(paramBean.id)">AND ID = #{paramBean.id}</if>
            <if test="paramBean != null and @Ognl@isNotEmpty(paramBean.cname)">AND C_NAME = #{paramBean.cname}</if>
            <if test="paramBean != null and @Ognl@isNotEmpty(paramBean.cdes)">AND C_DES = #{paramBean.cdes}</if>
            <if test="paramBean != null and @Ognl@isNotEmpty(paramBean.dcreateTime)">AND D_CREATE_TIME =
                #{paramBean.dcreateTime}
            </if>
            <if test="paramBean != null and @Ognl@isNotEmpty(paramBean.ioperator)">AND I_OPERATOR =
                #{paramBean.ioperator}
            </if>
            <if test="paramBean != null and @Ognl@isNotEmpty(paramBean.dupdateTime)">AND D_UPDATE_TIME =
                #{paramBean.dupdateTime}
            </if>
            <if test="paramBean != null and @Ognl@isNotEmpty(paramBean.iupdater)">AND I_UPDATER =
                #{paramBean.iupdater}
            </if>
            <if test="paramBean != null and @Ognl@isNotEmpty(paramBean.cstatus)">AND C_STATUS = #{paramBean.cstatus}
            </if>
            <if test="paramBean != null and @Ognl@isNotEmpty(paramBean.ccode)">AND C_CODE = #{paramBean.ccode}</if>
        </where>
    </sql>

    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO sys_role (
        <if test="@Ognl@isNotEmpty(id)">ID,</if>
        <if test="@Ognl@isNotEmpty(cname)">C_NAME</if>
        <if test="@Ognl@isNotEmpty(cdes)">,C_DES</if>
        <if test="@Ognl@isNotEmpty(dcreateTime)">,D_CREATE_TIME</if>
        <if test="@Ognl@isNotEmpty(ioperator)">,I_OPERATOR</if>
        <if test="@Ognl@isNotEmpty(dupdateTime)">,D_UPDATE_TIME</if>
        <if test="@Ognl@isNotEmpty(iupdater)">,I_UPDATER</if>
        <if test="@Ognl@isNotEmpty(cstatus)">,C_STATUS</if>
        <if test="@Ognl@isNotEmpty(ccode)">,C_CODE</if>
        ) VALUES (
        <if test="@Ognl@isNotEmpty(id)">#{id},</if>
        <if test="@Ognl@isNotEmpty(cname)">#{cname}</if>
        <if test="@Ognl@isNotEmpty(cdes)">,#{cdes}</if>
        <if test="@Ognl@isNotEmpty(dcreateTime)">,#{dcreateTime}</if>
        <if test="@Ognl@isNotEmpty(ioperator)">,#{ioperator}</if>
        <if test="@Ognl@isNotEmpty(dupdateTime)">,#{dupdateTime}</if>
        <if test="@Ognl@isNotEmpty(iupdater)">,#{iupdater}</if>
        <if test="@Ognl@isNotEmpty(cstatus)">,#{cstatus}</if>
        <if test="@Ognl@isNotEmpty(ccode)">,#{ccode}</if>
        )
    </insert>

    <insert id="batchInsert" keyProperty="id">
        INSERT INTO sys_role (
        ID,
        C_NAME
        ,C_DES
        ,D_CREATE_TIME
        ,I_OPERATOR
        ,D_UPDATE_TIME
        ,I_UPDATER
        ,C_STATUS
        ,C_CODE
        ) VALUES
        <foreach collection="entities" item="entity" index="index" separator=",">
            (
            #{entity.id},
            #{entity.cname}
            ,#{entity.cdes}
            ,#{entity.dcreateTime}
            ,#{entity.ioperator}
            ,#{entity.dupdateTime}
            ,#{entity.iupdater}
            ,#{entity.cstatus}
            ,#{entity.ccode}
            )
        </foreach>
    </insert>

    <update id="update">
        UPDATE sys_role
        <trim prefix="SET" suffixOverrides=",">
            <if test="cname != null and cname!=''">
                C_NAME = #{cname} ,
            </if>
            <if test="cdes != null and cdes!=''">
                C_DES = #{cdes} ,
            </if>
            <if test="dcreateTime != null and dcreateTime!=''">
                D_CREATE_TIME = #{dcreateTime} ,
            </if>
            <if test="ioperator != null and ioperator!=''">
                I_OPERATOR = #{ioperator} ,
            </if>
            <if test="dupdateTime != null and dupdateTime!=''">
                D_UPDATE_TIME = #{dupdateTime} ,
            </if>
            <if test="iupdater != null and iupdater!=''">
                I_UPDATER = #{iupdater} ,
            </if>
            <if test="cstatus != null and cstatus!=''">
                C_STATUS = #{cstatus} ,
            </if>
            <if test="ccode != null and ccode!=''">
                C_CODE = #{ccode} ,
            </if>
        </trim>
        WHERE
        ID = #{id}
    </update>

    <delete id="deleteById">
    <![CDATA[

        DELETE FROM sys_role WHERE
        ID = #{id} 

        ]]>
    </delete>

    <delete id="deleteByIds">
        DELETE FROM sys_role WHERE
        ID IN
        <foreach collection="ids" item="id" open="(" close=")" separator=",">#{id}</foreach>
    </delete>

    <select id="findById" resultMap="RM_SysRoleVO">
        SELECT
        <include refid="columns"></include>
        <![CDATA[
		    FROM sys_role
	        WHERE 
		        ID = #{id} 
	    ]]>
    </select>

    <select id="findPageCount" resultType="long">
        SELECT count(*) FROM sys_role
        <include refid="where"/>
    </select>

    <select id="findPage" resultMap="RM_SysRoleVO">
        SELECT * FROM sys_role
        <include refid="where"/>
        <!--<if test="orderBean != null and @Ognl@isNotEmpty(orderBean.orderBy)">-->
        <!--ORDER BY ${orderBean.orderBy} ${orderBean.order}-->
        <!--</if>-->
        <if test="orderBean != null and @Ognl@isNotEmpty(orderBean.orderList)">
            ORDER BY
            <foreach collection="orderBean.orderList" item="item" separator=",">${item.sortField} ${item.sortType}
            </foreach>
        </if>
    </select>

    <sql id="findBySql">
        SELECT * FROM sys_role
        <include refid="where"/>
    </sql>

    <select id="findBy" resultMap="RM_SysRoleVO">
        <include refid="findBySql"/>
    </select>

    <select id="findUniqueBy" resultMap="RM_SysRoleVO">
        <include refid="findBySql"/>
    </select>

    <select id="getRoleManList" resultMap="RM_SysRoleVO" parameterType="java.lang.String">
        SELECT A.*
        FROM sys_role A
        <if test="cname != null and @Ognl@isNotEmpty(cname)">
            WHERE A.C_NAME like concat('%',#{cname},'%')
        </if>
        ORDER BY A.D_CREATE_TIME ASC
    </select>
</mapper>

