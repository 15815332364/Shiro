<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">

	<context:component-scan base-package="com.base.web" />

	<!--定义一个bean用来读取配置文件然后注入到CustomizedPropertyConfigurer这个类中，方便在代码中读取配置文件的值-->
	<bean id="configBean"
		  class="com.base.web.utils.CustomizedPropertyConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:/prop/application-${spring.profiles.active}.properties</value>
			</list>
		</property>
	</bean>
	<!-- 全局变量以便可以获得对应的注入bean -->
	<bean id="springContextHelper" class="com.base.web.utils.SpringContextHelper" />
	<!--操作和登陆日志工具类注入bean-->
	<bean id="sysOprLogService" class="com.base.web.service.impl.SysOprLogServiceImpl"/>
	<bean id="sysLoginLogService" class="com.base.web.service.impl.SysLoginLogServiceImpl"/>

	<!-- 自动创建代理 对@AspectJ注解的支持 -->
	<!-- 通知spring使用cglib而不是jdk的来生成代理方法 AOP可以拦截到Controller --> 
	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>

	<mvc:annotation-driven />

	<!-- 静态资源映射 -->
	<!-- 缓存存在时间 cache-period 1年 -->
	<mvc:resources mapping="/static/**" location="/static/" cache-period="31556926"/>


    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/center/" />
		<property name="suffix" value=".jsp" />
	</bean>


	<!-- 配置多媒体文件解析器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设定默认编码 -->
		<property name="defaultEncoding" value="UTF-8"></property>
		<!-- 设定文件上传的最大值2MB， 10*1024*1024 -->
		<property name="maxUploadSize" value="20485760"></property>
		<!--resolveLazily属性启用是为了推迟文件解析，以便在UploadAction 中捕获文件大小异常--> 
		<property name="resolveLazily" value="true"/>    
	</bean>
	
	<!-- 属性文件不能跨容器，要在controller中也能被访问到，也需要配置 -->
	<context:property-placeholder location="classpath:resource/*.properties" />

	<!-- 定义无Controller的path<->view直接映射 -->
	<!--<mvc:view-controller path="/" view-name="redirect:/login"/>-->
	<mvc:view-controller path="/" view-name="redirect:/login"/>
</beans>
